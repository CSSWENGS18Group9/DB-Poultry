/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    application
    kotlin("jvm") version "2.1.21"
    java

}

group = "org.example"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

// JavaFX
val javafxVersion = "21.0.1"
val platform = when {
    System.getProperty("os.name").lowercase().contains("mac") -> {
        if (System.getProperty("os.arch") == "aarch64") "mac-aarch64" else "mac"
    }
    System.getProperty("os.name").lowercase().contains("linux") -> "linux"
    else -> "win"
}

dependencies {
    // Add any other dependencies here
    // Put the dependency below the comment where that dependency
    // belongs
    // Example, we add the JUnit dependency under the header
    // "Dependencies for QA" since JUnit will be used by the QAs
    //
    // Follow the format:
    //
    //      // <name of dependency>
    //      implementation("...")
    //
    // If unsure, message @zrygan

    // Dependencies for Dev
    // Kotlin
    implementation(kotlin("stdlib"))

    // Dependencies for UI/UX
    val javafxModules = listOf("base", "graphics", "controls", "fxml")
    javafxModules.forEach {
        implementation("org.openjfx:javafx-$it:$javafxVersion:$platform")
    }

    // Dependencies for Database
    // PostgresSQL
    implementation("org.postgresql:postgresql:42.7.3")

    // Dot Env (.env file)
    implementation("io.github.cdimascio:dotenv-java:3.0.0")

    // Dependencies for QA
    // JUnit
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
    testImplementation(kotlin("test"))
}

sourceSets {
    main {
        java {
            srcDirs("src/main/java")
        }
        kotlin {
            srcDirs("src/main/kotlin")
        }
    }

    test {
        java {
            srcDirs("src/test/java")
        }
        kotlin {
            srcDirs("src/test/kotlin")
        }
    }
}

application {
    mainClass.set("org.db_poultry.AppKt")
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

tasks.test {
    useJUnitPlatform()
}