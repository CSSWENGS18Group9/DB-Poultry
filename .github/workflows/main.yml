name: CI/CD (FatJar + PostgreSQL)

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: db_poultry_test
          POSTGRES_USER: db_poultry_test
          POSTGRES_PASSWORD: db_poultry_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew clean test
        env:
          DB_URL: jdbc:postgresql://localhost:5432/db_poultry_test

      - name: Build project (via FatJar)
        run: ./gradlew clean fatJar
        env:
          DB_URL: jdbc:postgresql://localhost:5432/db_poultry_test

      - name: Prepare test report directory
        if: always()
        run: |
          mkdir -p app/build/reports/tests/test
          if [ ! -f app/build/reports/tests/test/index.html ]; then
            echo "<h1>No test report available</h1><p>Build failed before tests ran.</p>" > app/build/reports/tests/test/index.html
          fi

      - name: Deploy JUnit test reports to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: app/build/reports/tests/test
          publish_branch: gh-pages

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    # ASSERT:
    #   CI succeeds
    #   on main branch
    needs: ci        
    if: github.ref == 'refs/heads/main'   

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build project (FatJar)
        run: ./gradlew clean fatJar

      - name: Extract version from Gradle
        id: get_version
        run: |
          VERSION=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "Detected version: $VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          files: app/build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
